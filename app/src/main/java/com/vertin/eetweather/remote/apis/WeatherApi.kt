/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Weather API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.vertin.eetweather.remote.apis

import com.vertin.eetweather.remote.models.ForecastsModel
import com.vertin.eetweather.remote.models.Location
import com.vertin.eetweather.remote.models.LocationDetails
import com.vertin.eetweather.remote.models.ObservationsModel
import com.vertin.eetweather.remote.models.WeatherModel
import io.reactivex.rxjava3.core.Single
import retrofit2.http.GET
import retrofit2.http.Headers

@JvmSuppressWildcards
interface WeatherApi {
    /**
     * Current weather in some location in Estonia
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "X-Operation-ID: ApiEstoniaCurrentGet"
    )
    @GET("/api/estonia/current")
    fun apiEstoniaCurrentGet(): Single<ObservationsModel>
    /**
     * Estonian weather forecast for the next 4 days
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "X-Operation-ID: ApiEstoniaForecastGet"
    )
    @GET("/api/estonia/forecast")
    fun apiEstoniaForecastGet(): Single<ForecastsModel>
    /**
     * Current weather in some world cities
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "X-Operation-ID: ApiWorldCurrentGet"
    )
    @GET("/api/world/current")
    fun apiWorldCurrentGet(): Single<WeatherModel>
    /**
     * Get available GMT dates for world weather history
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "X-Operation-ID: ApiWorldDatesGet"
    )
    @GET("/api/world/dates")
    fun apiWorldDatesGet(): Single<List<String>>
    /**
     * Get weather in selected location
     * The endpoint is owned by defaultname service owner
     * @param id Location ID (required)
     * @param date Optional parameter to get a location weather for a date in history (optional)
     */
    @Headers(
        "X-Operation-ID: ApiWorldLocationsByIdGet"
    )
    @GET("/api/world/locations/{id}")
    fun apiWorldLocationsByIdGet(
        @retrofit2.http.Path("id") id: String,
        @retrofit2.http.Query("date") date: String?
    ): Single<LocationDetails>
    /**
     * Get available locations
     * The endpoint is owned by defaultname service owner
     * @param name Optional LIKE filter for location name (optional)
     */
    @Headers(
        "X-Operation-ID: ApiWorldLocationsGet"
    )
    @GET("/api/world/locations")
    fun apiWorldLocationsGet(
        @retrofit2.http.Query("name") name: String?
    ): Single<List<Location>>
}
